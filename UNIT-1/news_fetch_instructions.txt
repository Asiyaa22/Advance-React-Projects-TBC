📘 **Project Name:** News Fetcher App

🔗 **Local Frontend:** [http://localhost:5173]
---

### 🎯 **Objective**

Build a modern React application that fetches live news articles from **NewsAPI**, allowing users to search and view trending headlines in real time. The app demonstrates **state management using Redux** and **asynchronous side effects with Redux-Saga**, ensuring clean, scalable code.

---

### 🧠 **Concepts Covered**

▫ React 18 with functional components and hooks
▫ Redux for global state management
▫ Redux-Saga for async API calls
▫ Controlled inputs and event handling
▫ Axios for HTTP requests
▫ Component-based architecture
▫ Responsive CSS-based UI design (no Tailwind)

---

### 🛠️ **Features Implemented**

✅ Fetches top news headlines dynamically
✅ Search functionality for user-defined keywords
✅ Real-time API integration using Redux-Saga
✅ Global state maintained via Redux store
✅ Graceful error and loading handling
✅ Card-based news display with responsive layout
✅ Clean, modern UI design with custom CSS

---

### 📂 **Folder Structure**

```
news-fetch/
├── node_modules/
├── public/
├── src/
│   ├── actions/
│   │   └── newsAction.js          # Action creators for Redux
│   │
│   ├── assets/
│   │   └── react.svg              # Static assets
│   │
│   ├── store/
│   │   ├── index.js               # Redux store configuration
│   │   ├── newsReducer.js         # Reducer for managing news state
│   │   └── newsSaga.js            # Saga for handling async API calls
│   │
│   ├── App.css                    # Main styling for layout and cards
│   ├── App.jsx                    # Main component rendering UI
│   ├── index.css                  # Base global CSS (fonts, resets)
│   ├── main.jsx                   # React entry point with Redux Provider
│
├── .gitignore
├── eslint.config.js
├── index.html
├── package.json
├── package-lock.json
├── README.md
└── vite.config.js
```

---

### 📦 **Concepts Breakdown**

🔹 **Redux:** Manages global state for all components
🔹 **Redux-Saga:** Handles async requests via generator functions
🔹 **Axios:** Fetches data from NewsAPI
🔹 **Reducers & Actions:** Update and control app data flow
🔹 **Vite:** Provides fast local development environment

---

### ✅ **API Endpoint Example**

```
GET https://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY
```

---

### 📌 **Run Instructions**

#### 🧩 Setup

1️⃣ Clone the project

```bash
git clone https://github.com/yourusername/news-fetcher.git
```

2️⃣ Navigate to the folder

```bash
cd news-fetch
```

3️⃣ Install dependencies

```bash
npm install
```

4️⃣ Add your API key to `.env`

```
VITE_NEWS_API_KEY=your_api_key_here
```

5️⃣ Start the development server

```bash
npm run dev
```

6️⃣ Open in browser:
👉 [http://localhost:5173](http://localhost:5173)

---

### 🎨 **UI Overview**

* **Header Section:** Search input + title
* **News Cards:** Grid-based layout for articles
* **Hover Effects:** Smooth transitions and shadows
* **Responsive Design:** Adjusts layout for mobile, tablet, desktop

---

### 🧩 **Core Redux Flow**

1️⃣ **User searches for news** → `FETCH_NEWS_REQUEST` dispatched
2️⃣ **Saga listens** → calls NewsAPI via Axios
3️⃣ **Response handled** → `FETCH_NEWS_SUCCESS` or `FETCH_NEWS_FAILURE`
4️⃣ **UI updates** automatically via Redux store

---

### 🛡️ **Notes**

• Requires valid **NewsAPI key** for data fetching
• Uses pure CSS for styling — no frameworks
• Loading and error states are managed through Redux
• Fully modular structure for easy scalability

---

### 💡 **Enhancement Ideas**

▫ Add filters for categories (sports, tech, business)
▫ Add dark/light mode toggle
▫ Implement infinite scroll or pagination
▫ Save favorite articles in localStorage

---

🚀 **Conclusion**
The **News Fetcher App** demonstrates an elegant, production-ready **React + Redux-Saga** implementation — showing how to integrate APIs, manage global state, and design responsive UIs in a modular, scalable way.
